module vga (
    input wire clk_50MHz, // 50 MHz system clock
    input wire rst,       // Reset input
    input wire [2:0] switch, // Switches for manual color control
    output reg clk_25MHz, // 25 MHz clock output
    output reg hsync,     // Horizontal sync output
    output reg vsync,     // Vertical sync output
    output reg [7:0] red,   // Red channel
    output reg [7:0] green, // Green channel
    output reg [7:0] blue   // Blue channel
);

    // Clock divider to generate 25 MHz clock from 50 MHz clock
    always @(posedge clk_50MHz) begin
        if (rst) begin
            clk_25MHz <= 0;
        end else begin
            clk_25MHz <= ~clk_25MHz;
        end
    end

    // VGA parameters for 640x480 resolution
    parameter h_front_porch = 16;
    parameter h_sync_pulse = 96;
    parameter h_back_porch = 48;
    parameter h_total_pixels = 800;

    parameter v_front_porch = 10;
    parameter v_sync_pulse = 2;
    parameter v_back_porch = 33;
    parameter v_total_lines = 525;

    reg [9:0] h_count = 0;
    reg [9:0] v_count = 0;

    // Updating horizontal and vertical counters
    always @(posedge clk_25MHz or posedge rst) begin
        if (rst) begin
            h_count <= 0;
            v_count <= 0;
        end else begin
            if (h_count < h_total_pixels - 1) begin
                h_count <= h_count + 1;
            end else begin
                h_count <= 0;
                if (v_count < v_total_lines - 1) begin
                    v_count <= v_count + 1;
                end else begin
                    v_count <= 0;
                end
            end
        end
    end

    // Generating hsync and vsync signals
    always @(*) begin
        hsync = ~(h_count < h_sync_pulse);
        vsync = ~(v_count < v_sync_pulse);
    end

	 parameter empty_space = 80; 
    // Defining the display area
    wire display_active = (h_count >= h_sync_pulse + h_back_porch + empty_space) &&
                          (h_count < h_total_pixels - h_front_porch - empty_space) &&
                          (v_count >= v_sync_pulse + v_back_porch) &&
                          (v_count < v_total_lines - v_front_porch);

	 // logic for the border
	 reg border_loc;
	 always @(*)
	 begin
		border_loc = (v_count <= v_sync_pulse + v_back_porch + 10) ||
						 (v_count >= v_total_lines - v_front_porch - 10)||
						 (h_count <= h_sync_pulse + h_back_porch + 10 + empty_space)||
						 (h_count >= h_total_pixels - h_front_porch - 10 - empty_space); 
	 end
	 
    // Manual color control using switches
    always @(*) begin
        if (display_active) begin
				if (border_loc) begin
					red = 8'd150;
               green =  8'd75;
					blue = 8'h00;
				end
				else begin
					red = switch[2] ? 8'hFF : 8'h00;
					green = switch[1] ? 8'hFF : 8'h00;
					blue = switch[0] ? 8'hFF : 8'h00;
				end
        end else begin
            red = 8'h00;
            green = 8'h00;
            blue = 8'h00;
        end
    end
endmodule
